{
  "swagger": "2.0",
  "info": {
    "description": "This is the \"Movies\" api.\n",
    "version": "1.0.0",
    "title": "Movies API"
  },
  "host": "symfony.dev",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oauth/v2/token": {
      "post": {
        "summary": "Authenticate via username and password.",
        "description": "",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "{ \"grant_type\": \"password\",\r\n \"client_id\": \"1_3bcbxd9e24g0gk4swg0kwgcwg4o8k8g4g888kwc44gcc0gwwk4\",\r\n \"client_secret\": \"4ok2x70rlfokc8g0wws8c8kwcokw80k44sg48goc0ok4w0so0k\",\r\n \"username\": \"admin\",\r\n \"password\": \"today123\"}\r\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "tags": [
          "Swagger"
        ],
        "summary": "Get the swagger doc for the API.",
        "operationId": "get_api",
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/movies": {
      "get": {
        "responses": {
          "200": {
            "description": "All movies that meet the conditions are returned.",
            "schema": {
              "$ref": "#/definitions/RexSoftwareTest.ApiBundle.Entity.Movie[]"
            }
          }
        },
        "description": "",
        "tags": [
          "Movie"
        ],
        "summary": "Get all movies that optionally meet certain conditions.",
        "operationId": "get_api-movies",
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/movies/{movie}": {
      "get": {
        "responses": {
          "200": {
            "description": "The movie with the id provided is returned.",
            "schema": {
              "$ref": "#/definitions/RexSoftwareTest.ApiBundle.Entity.Movie"
            }
          },
          "404": {
            "description": "The movie was not found, and error message will be returned.",
            "schema": {
              "$ref": "#/definitions/RexSoftwareTest.ApiBundle.Model.HttpErrorResponseModel"
            }
          }
        },
        "description": "",
        "tags": [
          "Movie"
        ],
        "summary": "Get a movie by id.",
        "operationId": "get_api-movies-movie",
        "parameters": [
          {
            "in": "path",
            "name": "movie",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "definitions": {
    "OAuthCredentials": {
      "type": "object",
      "required": [
        "grant_type",
        "client_id",
        "client_secret",
        "username",
        "password"
      ],
      "properties": {
        "grant_type": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RexSoftwareTest.ApiBundle.Entity.Movie": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "The title of the movie, non nullable."
        },
        "description": {
          "type": "string",
          "description": "The movie's description, this field is nullable."
        },
        "image": {
          "type": "string",
          "description": "A unique identifier for the movie's image (poster, etc), this field is nullable."
        },
        "rating": {
          "type": "number",
          "description": "The movie's current rating / 10, updated with each rating to avoid excessive re-calculation, it starts at 6.",
          "format": "float"
        },
        "role_ids": {
          "type": "array",
          "description": "The ids of the roles that are in the movie.",
          "items": {
            "type": "integer"
          }
        }
      },
      "type": "object"
    },
    "RexSoftwareTest.ApiBundle.Entity.Movie[]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RexSoftwareTest.ApiBundle.Entity.Movie"
      }
    },
    "RexSoftwareTest.ApiBundle.Model.HttpErrorDetailsModel": {
      "description": "The error details.",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The http code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "An error message."
        }
      },
      "type": "object"
    },
    "RexSoftwareTest.ApiBundle.Model.HttpErrorResponseModel": {
      "description": "",
      "properties": {
        "error": {
          "$ref": "#/definitions/RexSoftwareTest.ApiBundle.Model.HttpErrorDetailsModel"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "tags": [
    {
      "name": ""
    }
  ]
}